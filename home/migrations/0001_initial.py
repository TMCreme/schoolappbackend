# Generated by Django 3.0.6 on 2022-03-23 18:01

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('change_password', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('levelid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=250)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PTASchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField(db_index=True)),
                ('end_date', models.DateTimeField(db_index=True)),
                ('title', models.CharField(db_index=True, max_length=300)),
                ('meeting_agenda', models.TextField()),
                ('meeting_minutes', models.TextField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('organization_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='organizations.Organization')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('school_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'organization',
                'verbose_name_plural': 'organizations',
                'ordering': ['name'],
                'abstract': False,
            },
            bases=('organizations.organization',),
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('subjectid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=250)),
                ('deleted', models.BooleanField(default=False)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SubjectClass', to='home.Level')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SubjectTeacher', to='home.BaseUser')),
            ],
        ),
        migrations.CreateModel(
            name='TextBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('textbookid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=250)),
                ('author', models.CharField(max_length=250)),
                ('book', models.FileField(upload_to='')),
                ('deleted', models.BooleanField(default=False)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherRemarkForStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('remark', models.TextField()),
                ('deleted', models.BooleanField(default=False)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Level')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_receiving_remark', to='home.BaseUser')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_giving_remark', to='home.BaseUser')),
            ],
        ),
        migrations.CreateModel(
            name='StudentParentRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Parent', to='home.BaseUser')),
                ('studentone', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='Student', to='home.BaseUser')),
            ],
        ),
        migrations.AddField(
            model_name='level',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School'),
        ),
        migrations.AddField(
            model_name='level',
            name='students',
            field=models.ManyToManyField(blank=True, related_name='StudentsInTheClass', to='home.BaseUser'),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True, db_index=True)),
                ('name', models.CharField(db_index=True, max_length=250)),
                ('file', models.FileField(upload_to='assignments')),
                ('notes', models.TextField(blank=True, null=True)),
                ('date_due', models.DateTimeField()),
                ('deleted', models.BooleanField(default=False)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='AdminRemarkForStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('remark', models.TextField()),
                ('deleted', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_giving_remark', to='home.BaseUser')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.BaseUser')),
            ],
        ),
        migrations.CreateModel(
            name='ClassTimeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('deleted', models.BooleanField(default=False)),
                ('file', models.FileField(upload_to='timetable')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Level')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.School')),
            ],
            options={
                'unique_together': {('school', 'level')},
            },
        ),
    ]
